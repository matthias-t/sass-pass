@import 'debug';
@import 'util';

$__function: null;
$__result: null;

@function function($name) {
  @if not function-exists($name) { @error 'function #{$name} not found'; }
  $__function: $name !global;
  @debug '';
  @return to-upper-case($name);
}

@function assert($description) {
  $__function: null !global;
  @debug '';
  @return to-upper-case($description);
}

@function in($args...) {
  $isAssert: $__function == null;

  @if $isAssert { $__result: nth($args, 1) !global; }
  @else { $__result: call($__function, $args...) !global; }

  $arg-str: __beautify($args);
  $result-str: __beautify($__result);

  @if $isAssert { @return 'Got #{$result-str} '; }
  @else { @return '#{$__function}#{$arg-str}  =>  #{$result-str} '; }
}

@function out($expected) {
  $success: __equals($__result, $expected);
  @if not $success { @warn('TEST FAILED, see below'); }

  $expected: if($success, '', ' ' + __beautify($expected));
  @return '(expected#{$expected})';
}
